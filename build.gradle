group 'com.ti'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'

compileJava.options.encoding = 'UTF-8'

mainClassName = "com.ti.StmTest"

subprojects{
    apply plugin: 'java'
    apply plugin: 'idea'
//    apply plugin: 'application'

    repositories {
        mavenCentral()
    }
    dependencies {
        //compile group:'log4j',name:'log4j',version:'1.2.17'
        compile group:'org.scream3r',name:'jssc',version:'2.8.0'
        testCompile group: 'junit', name: 'junit', version: '4.11'
    }
}
project(':SerialService'){
    version = '0.1'
    jar.manifest {
        attributes 'Created-By': 'Ti'
//        attributes 'Main-Class': 'com.ti.AnalogTester'
        attributes 'Class-Path': 'Ti'
    }
}
project(':TildaService'){
    version = '0.1'
    dependencies{
        compile project(':SerialService')
    }
}
project(':AnalogTester'){
    apply plugin: 'application'
    mainClassName = "com.ti.AnalogTester"

    version = '0.1'
    def  service = rootProject.childProjects.get('SerialService').version
    dependencies{
        compile project(':SerialService')
        compile project(':TildaService')
    }
    jar.manifest {
        attributes 'Created-By': 'Ti'
        attributes 'Main-Class': 'com.ti.AnalogTester'
//        attributes 'Class-Path': 'SerialService-'+ service +'.jar jssc-2.8.0.jar'
    }
    jar {
        from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile group:'log4j',name:'log4j',version:'1.2.17'
    compile group:'org.scream3r',name:'jssc',version:'2.8.0'
    compile group:'com.google.guava',name:'guava',version:'15.0'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}


//task fatJar(type: Jar){
////    def  service = rootProject.childProjects.get('SerialService').version
//    manifest{
//        attributes "Main-Class": mainClassName
//        attributes 'Class-Path': 'LocalStorage.jar'
//    }
//    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//    with jar
//}